//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Group = newGroupTable("", "Group", "")

type groupTable struct {
	sqlite.Table

	// Columns
	ID          sqlite.ColumnInteger
	Name        sqlite.ColumnString
	SupertypeID sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GroupTable struct {
	groupTable

	EXCLUDED groupTable
}

// AS creates new GroupTable with assigned alias
func (a GroupTable) AS(alias string) *GroupTable {
	return newGroupTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GroupTable with assigned schema name
func (a GroupTable) FromSchema(schemaName string) *GroupTable {
	return newGroupTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GroupTable with assigned table prefix
func (a GroupTable) WithPrefix(prefix string) *GroupTable {
	return newGroupTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GroupTable with assigned table suffix
func (a GroupTable) WithSuffix(suffix string) *GroupTable {
	return newGroupTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGroupTable(schemaName, tableName, alias string) *GroupTable {
	return &GroupTable{
		groupTable: newGroupTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newGroupTableImpl("", "excluded", ""),
	}
}

func newGroupTableImpl(schemaName, tableName, alias string) groupTable {
	var (
		IDColumn          = sqlite.IntegerColumn("id")
		NameColumn        = sqlite.StringColumn("name")
		SupertypeIDColumn = sqlite.IntegerColumn("supertype_id")
		allColumns        = sqlite.ColumnList{IDColumn, NameColumn, SupertypeIDColumn}
		mutableColumns    = sqlite.ColumnList{NameColumn, SupertypeIDColumn}
	)

	return groupTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		SupertypeID: SupertypeIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
